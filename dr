#!/usr/bin/env python

'''
dr: a command-line wrapper for the daterange module
'''

from daterange import print_dates, parse_date
from datetime import date
from optparse import OptionParser

def main():
    '''
    Parses options and calls daterange, printing the results according.
    '''
    parser = OptionParser()
    parser.add_option('-t', '--today', dest='start', action='store_const',
            const=date.today(), default=date.today(),
            help="start from today's date (default)")
    parser.add_option('-s', '--start', action='callback', dest='start',
            type=str, callback=parse_date,
            help='the start date, in YYYY-MM-DD format')
    parser.add_option('-e', '--end', action='callback', dest='end',
            type=str, callback=parse_date,
            help='the end date (inclusive) in YYYY-MM-DD format')
    parser.add_option('-d', '--days', dest='days', action='store',
            type=int,
            help='the number of days to print')
    parser.add_option('-f', '--format', dest='format', action='store',
            type=str, default='%Y-%m-%d',
            help='the date format, default %Y-%m-%d')
    parser.add_option('-c', '--step', dest='step', action='store',
            type=int, default=1,
            help='days to step (default 1)')
    parser.add_option('-i', '--inclusive', dest='exclusive',
            action='store_false', default=True,
            help='if present, include the end date')
    opts, _ = parser.parse_args()

    print_dates(opts.start, date_fmt=opts.format, step=opts.step,
        end=opts.end, days=opts.days, exclusive=opts.exclusive)

if __name__ == '__main__':
    main()
